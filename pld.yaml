image:
  distribution: pld
  description: PLD Linux
  release: latest
  variant: minimal

source:
  downloader: docker-http
# url is set by build.sh
# url: pldlinux/i686:latest

targets:
  lxc:
    create-message: |-
      You just created a {{ image.description }} container.
    config:
    - type: all
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/common.conf
    - type: user
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/userns.conf
    - type: all
      content: |-
        lxc.arch = {{ image.architecture_personality }}

packages:
  custom-manager:
    refresh:
      cmd: poldek
      flags: [ --noprogress, --up ]
    install:
      cmd: poldek
      flags: [ -Oparticle_install=no, --noprogress, --noask, -u ]
    remove:
      cmd: poldek
      flags: [ --noprogress, --noask, -e ]
    update:
      cmd: poldek
      flags: [ -Oparticle_install=no, --noprogress, --noask, --upgrade-dist ]
    clean:
      cmd: poldek
      flags: [ --clean ]

actions:
  - trigger: post-unpack
    action: |-
      #!/bin/sh
      set -eux
      # re-enable network initialization disabled in docker image
      rm -f /var/lock/subsys/network
      # disable i18n installing
      sed -i '$ a%_install_langs C' /etc/rpm/macros
      # no systemd here
      sed -i '/^RPM_ENABLE_SYSTEMD_SERVICE=/ s/=yes/=no/' /etc/sysconfig/rpm
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      # system config
      for op in RC_PROMPT RUN_DEPMOD SELINUX SET_SLINKS \
                START_UDEV EVMS_LVM_COMPAT_NODES LVM2 \
                DMRAID MDADM DM_MULTIPATH \
                VSERVER_ISOLATION_NET; do
          sed -i "/^${op}=/ s/=.*/=no/" /etc/sysconfig/system
      done

      for op in FASTRC VSERVER; do
          sed -i "/^${op}=/ s/=.*/=yes/" /etc/sysconfig/system
      done

      # disable ttys
      sed -i '/^[^#].*:respawn:/ s/^/#/' /etc/inittab
      # shutdown immediately
      sed -i '/^pf::powerfail.*\+2/ s/\+2/now/' /etc/inittab

      # disable irrelevant sysctls
      sed -i '/^kernel.sysrq/ s/^/#/' /etc/sysctl.conf

      # fix: check lsmod existence
      sed -i -e '/if *\! *lsmod / i [ -x /sbin/lsmod ] || return 1' /lib/rc-scripts/functions

      # fix: loopback is initialized by lxd
      sed -i -e '/^[ \t]*ip addr add 127\.0\.0\.1\/8 dev lo/ s/^/(ip addr show dev lo | grep -q 127.0.0.1) ||/' /lib/rc-scripts/functions.network

      # locale
      cat << EOF >> /etc/sysconfig/i18n
      LANG="C.UTF-8"
      SUPPORTED_LOCALES="C.UTF-8/UTF-8"
      EOF

      localedb-gen

      # uninstall needless systemd-units
      rpm -q systemd-units >/dev/null && rpm -e systemd-units --nodeps --noscripts

      # cleanup
      rpm -e localedb-src
      rm -f /var/cache/hrmib/*
      rm -f /var/lib/rpm/__db.*

packages:
  update: false
  cleanup: true
  sets:
  - packages:
    - dhcp-client
    - localedb-src
    - rc-scripts
    - tzdata
    - vim
    action: install

files:
  - name: hostname
    path: /etc/hostname
    generator: hostname
    when: create
  - path: /etc/machine-id
    generator: dump
    when: create
  - name: network
    path: /etc/sysconfig/network
    generator: dump
    templated: true
    content: |-
      NETWORKING=yes
      IPV4_NETWORKING=yes
      IPV6_NETWORKING=no
      HOSTNAME=LXC_NAME
  - name: network.lxd
    path: /etc/sysconfig/network
    generator: template
    content: |-
      NETWORKING=yes
      IPV4_NETWORKING=yes
      IPV6_NETWORKING=no
      HOSTNAME={{ container.name }}
  - name: ifcfg-eth0
    path: /etc/sysconfig/interfaces/ifcfg-eth0
    generator: dump
    templated: true
    content: |-
      DEVICE=eth0
      ONBOOT=yes
      BOOTPROTO=dhcp
      # static ip configuration
      #BOOTPROTO=none
      #IPADDR=10.1.1.10/24
